
* publicity

Celebrating perhaps one of the several billions of winter solstices
undergone by certain elements of this module...  dine date release
plunges icy deep time of the geological. In ERD-world it is always the
shortest day.

ERD/gamma doesn't deliver a 4.5 billion year long oscillation cycle,
but in theory the module would have to be returned for recalibration
in perhaps a few billion years.

In the meantime ... delivers true random voltages and sequence lengths
under the control of selected controlled entropic measures.

* 15/12/2015

- timing closed to finished with float scales
- added new trigger mode for 2 triggers on 00,01//10,11

* 7/12/2015

- on gamma_revised.brd we have trigger out on PD0/pin 30!!!! - re-check gerbers on this!

* 5/12/2015

- we need seperate trigger out as CV as trigger is too slow/low on filter

- so we repurpose geiger pulse out (cut from r23 to unmarked resistor
  1K) to come from top serial pin PD1 (don;t put jumper there
  anyways)... rewire on first 20 and re-do PCB after that...

- means we have one extra mode???:

fast but low entropy - take low bits &255

-  and 4 possible trigger modes and how these match with CV modes for speed:

0-00: as belowabove lastrandom*speedscale - but we need to update this when we generate lastrandom so is slower  - match to 0
1-01: use timer to give pulse on lastrandom time * speedscale - match to 1
2-11: speedscale is divider and run as fast as possible on pulses - match to 2
from previous code: based on random time interval * lastrandom * scale (log?)* - slow?
divider is fresco=(lastrandom*speedscale)>>2;
3-11: ??? trigger in gives next pulse speedscaled but only a short time delay/??? - match to 3

* 1/12/2015

- gamma and gammaent001 code is on x60 and some strangeness but algo works there...

*try faster with 4 bits per sample? 160 cps = 80hz=40hz - test entropy*

- how to scale output?

- timing updated on end of time (eg after 1 min max if selected). minimum is half countrate...

- log_gen.py for log scales:

scale is: from 10=0.1seconds to 10240=102.4 seconds (over 1 minute)...

// or 10+255=10->265 = 0.1 to 2.65 seconds

counter updates 100 times per second, we generate max 10 value per
second so does it makes sense change at 1?

10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 15, 15,
15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 22, 22, 23, 23, 24,
25, 25, 26, 27, 28, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 58, 60, 62,
63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 91, 93, 96, 98,
101, 104, 107, 110, 113, 116, 119, 123, 126, 130, 133, 137, 141, 145,
149, 153, 157, 161, 166, 170, 175, 180, 185, 190, 195, 201, 206, 212,
218, 224, 230, 237, 243, 250, 257, 264, 271, 279, 286, 294, 303, 311,
320, 328, 337, 347, 356, 366, 376, 387, 398, 409, 420, 432, 443, 456,
468, 481, 495, 508, 522, 537, 552, 567, 583, 599, 616, 633, 650, 668,
687, 706, 725, 745, 766, 787, 809, 831, 854, 878, 902, 927, 953, 979,
1006, 1034, 1063, 1092, 1122, 1153, 1185, 1218, 1252, 1287, 1322,
1359, 1396, 1435, 1475, 1515, 1557, 1601, 1645, 1690, 1737, 1785,
1835, 1885, 1938, 1991, 2046, 2103, 2161, 2221, 2282, 2345, 2410,
2477, 2546, 2616, 2688, 2763, 2839, 2918, 2999, 3081, 3167, 3254,
3344, 3437, 3532, 3630, 3730, 3833, 3939, 4048, 4161, 4276, 4394,
4515, 4640, 4769, 4901, 5036, 5176, 5319, 5466, 5617, 5773, 5932,
6097, 6265, 6439, 6617, 6800, 6988, 7181, 7380, 7584, 7794, 8010,
8231, 8459, 8693, 8933, 9181, 9435, 9696, 9964, 10240

or if we run timer 10x faster:

100, 102, 105, 108, 111, 114, 117, 121, 124, 127, 131, 135, 138, 142,
146, 150, 154, 159, 163, 167, 172, 177, 182, 187, 192, 197, 203, 208,
214, 220, 226, 233, 239, 246, 252, 259, 267, 274, 282, 289, 297, 306,
314, 323, 332, 341, 350, 360, 370, 380, 391, 402, 413, 424, 436, 448,
460, 473, 486, 500, 514, 528, 542, 558, 573, 589, 605, 622, 639, 657,
675, 694, 713, 733, 753, 774, 795, 817, 840, 863, 887, 911, 937, 963,
989, 1017, 1045, 1074, 1103, 1134, 1165, 1198, 1231, 1265, 1300, 1336,
1373, 1411, 1450, 1490, 1531, 1574, 1617, 1662, 1708, 1755, 1804,
1854, 1905, 1958, 2012, 2067, 2125, 2183, 2244, 2306, 2370, 2435,
2503, 2572, 2643, 2716, 2791, 2869, 2948, 3030, 3113, 3200, 3288,
3379, 3472, 3569, 3667, 3769, 3873, 3980, 4090, 4204, 4320, 4439,
4562, 4688, 4818, 4951, 5088, 5229, 5374, 5523, 5675, 5832, 5994,
6160, 6330, 6505, 6685, 6870, 7060, 7255, 7456, 7663, 7875, 8092,
8316, 8546, 8783, 9026, 9276, 9532, 9796, 10067, 10345, 10632, 10926,
11228, 11539, 11858, 12186, 12523, 12870, 13226, 13592, 13968, 14354,
14751, 15159, 15579, 16010, 16452, 16908, 17375, 17856, 18350, 18858,
19380, 19916, 20467, 21033, 21615, 22213, 22827, 23459, 24108, 24775,
25460, 26165, 26888, 27632, 28397, 29182, 29990, 30819, 31672, 32548,
33449, 34374, 35325, 36302, 37307, 38339, 39399, 40489, 41610, 42761,
43944, 45159, 46409, 47693, 49012, 50368, 51761, 53193, 54665, 56177,
57732, 59329, 60970, 62657, 64390, 66172, 68002, 69884, 71817, 73804,
75845, 77944, 80100, 82316, 84593, 86934, 89339, 91810, 94350, 96960,
99643, 102400,


at 80cps we can generate 10 bytes per second... so for above we need 160cps!

- how to scale voltages? *modulus/%/ from 1 to 256*

- modes:

*0*-00/ scaled random every speed time - int for timing and output
lastrandom/scaled - what is our scale for speed say fastest=10Hz to
slowest=every 30 seconds - *need scaled time fixed array/log ABOVE - update at end of speed...*

*1*-01/ scaled random every random time scaled by speed setting(log?) - int at
random time = two random numbers needed (from array of 255)

random time scaled so: scale 0=10+0->255(x) = 10-265=2.65secs, scale 1=10+0->2*x = 10-522, and so on? till 10+255*x = 10+65025=650seconds????

or use time they are emitted and start to divide this? fastest -> every xth

or divide by random_time * scale from 0*0fastest thru 1->254=25secs to
random_time*log scale(?) (0-255*255) = max 10times per sec to
65025=6500secs=100 mins+ ?

*2 = 1/4/8 etc

1,2,3,4->.... every 2nd, 3rd etc,,, to 255th = every 255th= 25 secs

or we say that random time is interval and not /*/ and just divide
0-255(scale) byte time coming out? then we don't need 2 values...

*2*-10/ pulse 5v every x scaled random time - as above-01 or *do pulse
based on random time interval * lastrandom * scale (log?)* - slow? *TO REPLACE in new scheme below*

*3*-11/ 5v trigger in gives last random voltage we generated - trigger interrupt* DONE almost


